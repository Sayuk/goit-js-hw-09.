{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAtCdC,SAASC,cAAc,SAC/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcV,MAAMW,OACrCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDhB,EAAcgB,EAAUN,GACvBO,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,YAAW,KACTpB,EAAAqB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAU,GAC9DA,EAAM,IAEVmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,YAAW,KACTpB,EAAAqB,OAAOG,QAAQ,sBAAoBrB,QAAeC,MAAU,GAC3DA,EAAM,IAEbQ,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n \n  let delay = Number(e.currentTarget.delay.value);\n  let step = Number(e.currentTarget.step.value);\n  let amount = Number(e.currentTarget.amount.value);\n\nfor (let position = 1; position <= amount; position += 1) {\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    setTimeout(() => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }, delay)\n  })\n  .catch(({ position, delay }) => { \n    setTimeout(() => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay) \n  });\ndelay += step;\n}\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","Notify","success","catch","failure"],"version":3,"file":"03-promises.cbf47022.js.map"}