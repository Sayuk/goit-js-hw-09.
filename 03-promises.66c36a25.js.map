{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAEC,iBAMJ,IAJE,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,MAAMC,OACrCC,EAAOJ,OAAOH,EAAEI,cAAcG,KAAKD,OACnCE,EAASL,OAAOH,EAAEI,cAAcI,OAAOF,OAEpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,GACvCA,EAAUP,OA0BlBQ,OAAgBC,KAAKC,SAAW,KAzBrCC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBW,YAAW,WACTrB,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANd,EAAM,M,GAC5DA,E,IAEJe,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBW,YAAW,WACTrB,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANd,EAAM,M,GACzDA,E,IAEPH,GAASK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(e){\n  e.preventDefault();\n \n  let delay = Number(e.currentTarget.delay.value);\n  let step = Number(e.currentTarget.step.value);\n  let amount = Number(e.currentTarget.amount.value);\n\nfor (let position = 1; position <= amount; position += 1) {\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    setTimeout(() => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }, delay)\n  })\n  .catch(({ position, delay }) => { \n    setTimeout(() => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay) \n  });\ndelay += step;\n}\n}\n\n\n\n\n\n\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","delay","value","step","amount","position1","shouldResolve","Math","random","then","param","position","setTimeout","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.66c36a25.js.map"}